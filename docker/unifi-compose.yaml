services:
  unifi:
    image: ghcr.io/linuxserver/unifi-network-application:9.0.114
    container_name: unifi
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
    networks:
      - default
      - traefik
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - config:/config
    environment:
      PUID: 103
      PGID: 996
      MONGO_USER: unifi
      MONGO_PASS: ${MONGO_PASSWORD}
      MONGO_HOST: unifi-db
      MONGO_PORT: 27017
      MONGO_DBNAME: unifi
      MONGO_AUTHSOURCE: admin
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.unifi.loadBalancer.server.port=8443"
      - "traefik.http.routers.unifi-local.entrypoints=http,https"
      - "traefik.http.routers.unifi-local.rule=Host(`unifi.fridge.local`)"

  db:
    image: docker.io/mongo:3.6
    container_name: unifi-db
    networks:
      - default
    volumes:
      - data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_USER: unifi
      MONGO_PASS: ${MONGO_PASSWORD}
      MONGO_DBNAME: unifi
      MONGO_AUTHSOURCE: admin
    configs:
      - source: init-mongo.js
        target: /docker-entrypoint-initdb.d/init-mongo.js
    restart: unless-stopped

configs:
  init-mongo.js:
    content: |
      db = db.getSiblingDB(process.env.MONGO_DBNAME);
      db.createUser({ user: process.env.MONGO_USER, pwd: process.env.MONGO_PASS, roles: [{ role: 'dbOwner', db: process.env.MONGO_DBNAME }, { role: 'dbOwner', db: process.env.MONGO_DBNAME + '_stat' }] });

volumes:
  config:
  data:

networks:
  default:
  traefik:
    name: traefik
    external: true
