services:
  unifi:
    image: ghcr.io/linuxserver/unifi-network-application:9.0.114
    container_name: unifi
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
    networks:
      - default
      - traefik
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - config:/config
    environment:
      - PUID=103
      - PGID=996
      - MONGO_USER=unifi
      - MONGO_PASS=unifipwd
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.unifi.loadBalancer.server.port=8443"
      - "traefik.http.routers.unifi-local.entrypoints=http,https"
      - "traefik.http.routers.unifi-local.rule=Host(`unifi.fridge.local`)"

  db:
    image: docker.io/mongo:8.0.4-noble
    container_name: unifi-db
    networks:
      - default
    volumes:
      - db-data:/data/db
      - db-config:/data/configdb
    configs:
      - source: init-mongo.js
        target: /docker-entrypoint-initdb.d/init-mongo.js
    restart: unless-stopped

configs:
  init-mongo.js:
    content: |
      db.getSiblingDB("unifi").createUser({user: "unifi", pwd: "unifipwd", roles: [{role: "readWrite", db: "unifi"}]});
      db.getSiblingDB("unifi_stat").createUser({user: "unifi", pwd: "unifipwd", roles: [{role: "readWrite", db: "unifi_stat"}]});

volumes:
  config:
  db-config:
  db-data:

networks:
  default:
  traefik:
    name: traefik
    external: true
